version: "3.8"

services:
  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:3.4.0
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  mongodb:
    image: mongo:5
    ports:
      - "27017:27017"

  kafka-producer:
    build:
      context: .
      dockerfile: docker/Dockerfile.producer
    container_name: kafka-producer
    depends_on:
      - kafka
    ports:
      - "3000:3000"
    environment:
      - KAFKA_BROKER=kafka:9092
      - KAFKA_TOPIC=test-topic


  consumer:
    build:
      context: .
      dockerfile: docker/Dockerfile.consumer
    container_name: kafka-consumer
    depends_on:
      - kafka
      - mongodb
    environment:
      - KAFKA_BROKER=kafka:9092
      - TOPIC_NAME=test-topic
      - MONGODB_URI=mongodb://mongodb:27017
      - MONGODB_DB=kafka_logs
      - MONGODB_COLLECTION=logs
